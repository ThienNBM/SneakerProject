@model IEnumerable<SneakerInside.Models.Catalog>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card card-secondary">
    <div class="card-header">
        <h3 class="card-title">Danh sách hãng giày</h3>
    </div>
    <div class="card-body">
        <table id="catalogTable" class="table table-bordered table-hover" width="100%">
            <thead>
                <tr>
                    <th style="text-align: center">
                        <button type="button" class="btn btn-success" onclick="showCreateModal()">
                            <i class="fas fa-plus"></i>
                        </button>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CatalogName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts{
<script type="text/javascript">
    //Lấy dữ liệu lên bảng
    var dataTable, tempId;
    $(document).ready(function () {
        dataTable = $('#catalogTable').DataTable({
            ajax: {
                url: '@Url.Action("GetAll", "Catalog")',
                type: 'GET',
                datatype: 'json'
            },
            columns: [
                {
                    data: 'catalogID',
                    render: function (data) {
                        return '<button type="button" class="btn btn-info" onclick="showEditModal(' + data + ')"><i class="fas fa-edit"></i></button ><button type = "button" class="btn btn-danger" style = "margin-left:5px" onclick = "showDeleteModal(' + data + ')"><i class="fas fa-trash-alt"></i></button >';
                    },
                    orderable: false,
                    width: '100px'
                },
                {
                    data: 'catalogName'
                },
                {
                    data: 'status',
                    render: function (data) {
                        return data ? "Hoạt động" : "Không hoạt động";
                    }
                }
            ]
        });
    });

    //Hàm hiện modal thêm
    function showCreateModal() {
        url = "@Url.Action("Create", "Catalog")";
        name = "Thêm mới " + "@ViewBag.Name";
        showModal(url, name);
    }

    //Hàm hiện modal sửa
    function showEditModal(data) {
        url = "@Url.Action("Edit", "Catalog")/" + data;
        name = "Chỉnh sửa " + "@ViewBag.Name";
        showModal(url, name);
    }

    //Hàm hiện modal xóa
    function showDeleteModal(data) {
        tempId = data;
        $("#deleteModal").modal('show');
    }

    //Hàm thực hiện thêm
    function submitCreateForm(form) {
        $.validator.unobtrusive.parse(form);
        if ($(form).valid()) {
            submitForm(form);
        }
        return false;
    }

    //Hàm thực hiện xóa
    function deleteForm() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Delete", "Catalog")/" + tempId,
            success: function (res) {
                if (res.error.errorMessage == "") {
                    $.bootstrapGrowl("Thực hiện thành công", {
                        type: 'success'
                    });
                    $("#deleteModal").modal('hide');
                    dataTable.ajax.reload();
                }
                else {
                    $.bootstrapGrowl(res.error.errorMessage, {
                        type: 'danger'
                    });
                }
            }
        });
    }
</script>
}
